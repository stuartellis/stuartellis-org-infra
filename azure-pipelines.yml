variables:
  - template: .azure-pipelines/variables.yml
  - name: terraformStack
    value: $(Build.Repository.LocalPath)/stuartellis-org-infra/tf/live/aws/stuartellis-origin/aaa/us-east-1/shared/notifications

name: ${{variables.name}}-$(Date:yyyyMMddhhmm).$(Rev:r)

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - CONTRIBUTING.md
      - README.md

resources:
  repositories:
    - repository: stuartellis-org-tf-modules
      type: git
      name: stuartellis-org-tf-modules
      ref: refs/heads/develop

stages:
  - stage: run
    displayName: Run
    jobs:
      - job: run
        displayName: Run Terragrunt
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - checkout: self
          - checkout: stuartellis-org-tf-modules

          - template: .azure-pipelines/setup-binaries.yml
            parameters:
              cacheKeyFile: stuartellis-org-infra/package.json
              cacheName: binaries
              workingDirectory: stuartellis-org-infra

          - template: .azure-pipelines/run-terragrunt.yml
            parameters:
              awsRegion: eu-west-1
              awsServiceConnection: sje-aws-origin
              tgCommand: validate
              tgExe: $(Build.Repository.LocalPath)/stuartellis-org-infra/bin/terragrunt
              workingDirectory: ${{ variables.terraformStack }}

          - template: .azure-pipelines/run-terragrunt.yml
            parameters:
              awsRegion: eu-west-1
              awsServiceConnection: sje-aws-origin
              tgCommand: plan
              tgOptions: "-out $(Agent.TempDirectory)/tfplan"
              tgExe: $(Build.Repository.LocalPath)/stuartellis-org-infra/bin/terragrunt
              workingDirectory: ${{ variables.terraformStack }}

          - template: .azure-pipelines/run-terragrunt.yml
            parameters:
              awsRegion: eu-west-1
              awsServiceConnection: sje-aws-origin
              tgCommand: show
              tgOptions: "-json $(Agent.TempDirectory)/tfplan > $(Agent.TempDirectory)/tfplan.json"
              tgExe: $(Build.Repository.LocalPath)/stuartellis-org-infra/bin/terragrunt
              workingDirectory: ${{ variables.terraformStack }}

          - task: CopyFiles@2
            displayName: Copy Terraform plan
            inputs:
              sourceFolder: ${{ variables.terraformStack }}
              contents: tfplan* 
              targetFolder: $(Agent.TempDirectory)/tfplan-$(Build.BuildId)

          - task: ArchiveFiles@2
            displayName: Create ZIP for Terraform plan
            inputs:
              rootFolderOrFile: $(Agent.TempDirectory)/tfplan-$(Build.BuildId) 
              includeRootFolder: false 
              archiveFile: $(Build.ArtifactStagingDirectory)/tfplan-$(Build.BuildId).zip

          - task: PublishPipelineArtifact@1
            displayName: Publish ZIP of Terraform plan
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/tfplan-$(Build.BuildId).zip
              artifactName: tfplan-$(System.JobId)

          # FIXME: Apply plan
