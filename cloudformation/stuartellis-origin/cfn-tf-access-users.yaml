AWSTemplateFormatVersion: "2010-09-09"
Description: |
  AWS resources for Terraform access
Parameters:
  Prefix:
    Type: String
    Description: The prefix for AWS resource names
  ProjectName:
    Type: String
    Description: The name of the project
  Environment:
    Type: String
    Description: The name of the environment
  TfArnSameAccountExecRole:
    Type: String
    Description: The ARN of the role in the same AWS account
  TfArnExecRole0001:
    Type: String
    Description: The ARN of the role in an account that is being managed
  TfImportKmsKeyBackend:
    Type: String
    Description: Name of exported value that provides the ARN of the KMS key for the Terraform state
  TfImportS3Backend:
    Type: String
    Description: Name of exported value that provides the ARN of the S3 bucket for the Terraform state
  TfImportDdbBackend:
    Type: String
    Description: Name of exported value that provides the ARN of the DynamoDB table for Terraform locking

Resources:

  TfAccessGroup:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: !Sub ${Prefix}-${ProjectName}-${Environment}-tf-users

  TfManagedAccountsExecPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}-${ProjectName}-${Environment}-tf-exec
      Groups: 
       - !Ref TfAccessGroup
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: 
            - sts:AssumeRole
          Resource:
            - !Ref TfArnSameAccountExecRole
            - !Ref TfArnExecRole0001
 
  TfBackendAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}-${ProjectName}-${Environment}-tf-backend
      Groups: 
       - !Ref TfAccessGroup
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - !ImportValue 
                'Fn::Sub': ${TfImportKmsKeyBackend}
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !ImportValue 
                'Fn::Sub': ${TfImportS3Backend}
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - 'Fn::Join': 
                - '/'
                - - !ImportValue
                    'Fn::Sub': ${TfImportS3Backend}
                  - '*'
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:PutItem
            Resource:
              - !ImportValue 
                'Fn::Sub': ${TfImportDdbBackend}

  TfAccessUser0001:
    Type: AWS::IAM::User
    Properties: 
      Groups: 
        - !Ref TfAccessGroup
      UserName: !Sub ${Prefix}.${ProjectName}.${Environment}.tfuser
      Tags:
        - Key: sje:purpose
          Value: terraform-access

Outputs:
  TfAccessGroup:
    Value: !Ref TfAccessGroup
  TfAccessUser0001:
    Value: !Ref TfAccessUser0001
