AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Primary bucket for replication

Parameters:
  Prefix:
    Type: String
    Description: The prefix for AWS resource names
  KmsMainKeyArn:
    Type: String
    Description: The ARN of the key for the main S3 bucket
  KmsReplicaKeyArn:
    Type: String
    Description: The ARN of the key for the replica S3 bucket
  ReplicationBucketArn:
    Type: String
    Description: The ARN of the replica S3 bucket

Resources:
  PrimaryBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub ${Prefix}-main-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
              KMSMasterKeyID: !Ref KmsMainKeyArn
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration:
        Role: !GetAtt PrimaryBucketReplicationRole.Arn
        Rules:
          - Id: ReplicationToSecondary
            Destination:
              Bucket: !Ref ReplicationBucketArn
            Prefix: ""
            Status: Enabled

  PrimaryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PrimaryBucket
      PolicyDocument:
        Statement:
          - Sid: Deny deletion of objects
            Effect: Deny
            Principal: "*"
            Action:
              - "s3:DeleteObject"
            Resource: !Sub "${PrimaryBucket.Arn}/*"
          - Sid: Deny requests that do not use TLS
            Effect: Deny
            Principal: "*"
            Action:
              - "s3:*"
            Resource: !Sub "${PrimaryBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
          - Sid: Deny object uploads not using default encryption settings
            Effect: Deny
            Principal: "*"
            Action:
              - "s3:PutObject"
            Resource: !Sub "${PrimaryBucket.Arn}/*"
            Condition:
              # The Null-condition allows uploads without encryption information in the request
              # (i.e., requests with default S3 bucket encryption) and the
              # StringNotEquals-condition denies uploads with invalid encryption information.
              # Note that using StringNotEqualsIfExists doesnâ€™t work for uploads without encryption information.
              # The condition evaluates to true and denies the upload because of the Deny-effect.
              "Null":
                s3:x-amz-server-side-encryption: false
              StringNotEqualsIfExists:
                s3:x-amz-server-side-encryption:
                  - "AES256"
                  - "aws:kms"

  PrimaryBucketReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: s3-replication-policy
          PolicyDocument:
            Statement:
              - Action:
                  - s3:ListBucket
                  - s3:GetReplicationConfiguration
                  - s3:GetObjectVersionForReplication
                  - s3:GetObjectVersionAcl
                Effect: Allow
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${Prefix}-main-${AWS::AccountId}-${AWS::Region}"
                  - !Sub "arn:${AWS::Partition}:s3:::${Prefix}-main-${AWS::AccountId}-${AWS::Region}/*"

              - Action:
                  - s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                  - s3:GetObjectVersionTagging
                Effect: Allow
                Condition:
                  StringLikeIfExists:
                    s3:x-amz-server-side-encryption: aws:kms,
                      AES256
                    s3:x-amz-server-side-encryption-aws-kms-key-id: !Ref ReplicationBucketArn
                Resource: !Sub "${ReplicationBucketArn}/*"

              - Action: kms:Decrypt
                Effect: Allow
                Condition:
                  StringLike:
                    kms:ViaService: s3.us-west-2.amazonaws.com,
                    kms:EncryptionContext:aws:s3:arn: !Sub "arn:${AWS::Partition}:s3:::${Prefix}-main-${AWS::AccountId}-${AWS::Region}/*"
                Resource: !Ref KmsMainKeyArn

              - Action: kms:Encrypt
                Effect: Allow
                Condition:
                  StringLike:
                    kms:ViaService: s3.us-east-1.amazonaws.com,
                    kms:EncryptionContext:aws:s3:arn: !Sub "${ReplicationBucketArn}/*"
                Resource: !Ref KmsReplicaKeyArn

Outputs:
  PrimaryBucketArn:
    Value: !GetAtt PrimaryBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-s3-arn"
