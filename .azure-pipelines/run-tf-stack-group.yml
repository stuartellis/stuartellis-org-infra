parameters:
  - name: cloudRegion
    type: string
  - name: providerServiceConnection
    type: string
  - name: dryRun
    type: boolean
  - name: environment
    type: string
  - name: projectName
    type: string
  - name: providerName
    type: string
  - name: runIdentifier
    type: string
  - name: stackGroupPath
    type: string
  - name: terraformModulesRepo
    type: string
  - name: terraformStacks
    type: object
  - name: vmImage
    type: string

stages:
  - stage:
    displayName: Terraform for ${{ parameters.providerName }} ${{ parameters.environment }} ${{ parameters.cloudRegion }}
    jobs:
      - deployment:
        displayName: Test and Run with ${{ parameters.providerName }} ${{ parameters.environment }} ${{ parameters.cloudRegion }}
        pool:
          vmImage: ${{ parameters.vmImage }}
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - checkout: ${{ parameters.terraformModulesRepo }}

                - template: setup-binaries.yml
                  parameters:
                    workingDirectory: ${{ parameters.projectName }}

                - ${{ each terraformStack in parameters.terraformStacks }}:
                    - template: create-output-dir.yml
                      parameters:
                        sourceDir: ${{ parameters.projectName }}
                        outputDir: $(Agent.TempDirectory)/${{ parameters.runIdentifier }}/${{ terraformStack.Key }}

                    - template: test-tf-code.yml
                      parameters:
                        cloudRegion: ${{ parameters.cloudRegion }}
                        providerName: ${{ parameters.providerName }}
                        providerServiceConnection: ${{ parameters.providerServiceConnection }}
                        targetName: ${{ terraformStack.Key }}
                        terraformOutputDir: $(Agent.TempDirectory)/${{ parameters.runIdentifier }}/${{ terraformStack.Key }}
                        terraformSourceDir: ${{ parameters.stackGroupPath }}/${{ terraformStack.Key }}
                        terraformExe: $(Build.Repository.LocalPath)/${{ parameters.projectName }}/bin/terragrunt

                    - template: compile-tf-plan.yml
                      parameters:
                        cloudRegion: ${{ parameters.cloudRegion }}
                        providerName: ${{ parameters.providerName }}
                        providerServiceConnection: ${{ parameters.providerServiceConnection }}
                        targetName: ${{ terraformStack.Key }}
                        terraformOutputDir: $(Agent.TempDirectory)/${{ parameters.runIdentifier }}/${{ terraformStack.Key }}
                        terraformSourceDir: ${{ parameters.stackGroupPath }}/${{ terraformStack.Key }}
                        terraformExe: $(Build.Repository.LocalPath)/${{ parameters.projectName }}/bin/terragrunt

                    - ${{ if eq(parameters.dryRun, false) }}:
                        - template: apply-tf-plan.yml
                          parameters:
                            cloudRegion: ${{ parameters.cloudRegion }}
                            providerName: ${{ parameters.providerName }}
                            providerServiceConnection: ${{ parameters.providerServiceConnection }}
                            targetName: ${{ terraformStack.Key }}
                            terraformOutputDir: $(Agent.TempDirectory)/${{ parameters.runIdentifier }}/${{ stack.Key }}
                            terraformSourceDir: ${{ parameters.stackGroupPath }}/${{ stack.Key }}
                            terraformExe: $(Build.Repository.LocalPath)/${{ parameters.projectName }}/bin/terragrunt

                - template: archive-outputs.yml
                  parameters:
                    archiveName: ${{ parameters.runIdentifier }}
                    rootDir: $(Agent.TempDirectory)/${{ parameters.runIdentifier }}
